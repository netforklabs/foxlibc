/*! ************************************************************************
 *
 * Copyright (C) 2020 netforklabs All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *! ************************************************************************/

/*! ===> Creates on 2021/8/28. <=== */

/*!
 * @author LAB
 */
#ifndef FOXLIBC_MEM_HEAP_H
#define FOXLIBC_MEM_HEAP_H

#include <foxlibc>
#include <limits.h>
#define HEAP_MIN_CAPACITY 100
#define HEAP_MIN_TYPE int

/** 最小堆 */
typedef struct _heap_min{
    HEAP_MIN_TYPE val[HEAP_MIN_CAPACITY];
    size_t capacity;
    size_t size;
}Heap_block,*Heap_min;

/** 初始化堆 */
__foxext__ void init_heap_min(Heap_min *heap);

/** 打印堆 */
__foxext__ void print_heap_min(Heap_min heap);

/** 插入数据 */
__foxext__ void insert_heap_min(Heap_min heap,HEAP_MIN_TYPE val);

/** 小的向上渗透
* pos -- 向上渗透的起始位置
*/
__foxext__ void percolate_up_heap_min(Heap_min heap,size_t pos);

/** 删除堆中最小的元素 */
__foxext__ int delete_min_heap_min(Heap_min heap);

/** 删除堆中某个索引的元素 */
__foxext__ int delete_heap_min(Heap_min heap,size_t pos);

/** 大的向下渗透
* pos -- 向下渗透的元素位置
*/
__foxext__ void percolate_down_heap_min(Heap_min heap,size_t pos);

/** 建堆,所有非叶子节点下滤
* ele -- 要建造的元素数组
* len -- 要建造的元素数组的长度
*/
__foxext__ Heap_min build_heap_min(HEAP_MIN_TYPE *ele,int len);

#endif /* FOXLIBC_MEM_HEAP_H */
