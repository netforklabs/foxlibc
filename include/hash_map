/*! ************************************************************************
 *
 * Copyright (C) 2020 netforklabs All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *! ************************************************************************/

/*! ===> Creates on 2021/8/28. <=== */

/*!
 * @author LAB
 */
#ifndef FOXLIBC_COLLECT_MAP_H
#define FOXLIBC_COLLECT_MAP_H

#include <foxlibc>
#define KEY_HASHMAP_TYPE char*
#define VALUE_HASHMAP_TYPE char*

static size_t MIN_HASHMAP_CAPACITY = 64;
static float DEFAULT_LOAD_FACTOR = 0.75f; // 默认

typedef struct _hash_node{
    KEY_HASHMAP_TYPE key;
    VALUE_HASHMAP_TYPE value;
    struct _hash_node* next;
}Hash_node;

typedef struct _hash_map{
    size_t size;
    size_t capacity;
    Hash_node** hash_arr;
}Hash_block,*Hash_map;

/** 打印 */
__foxext__ void print_hash_map(Hash_map map);

/** 初始化 */
__foxext__ void init_hash_map(Hash_map* map);

/** hash函数 */
__foxext__ int hashCode_hash_map(Hash_map map,KEY_HASHMAP_TYPE key);

/** 比较键值的hashcode */
__foxext__ bool equal_hash_map(KEY_HASHMAP_TYPE key1,KEY_HASHMAP_TYPE key2);

/** 添加键值 */
__foxext__ void put_hash_map(Hash_map map,KEY_HASHMAP_TYPE key,VALUE_HASHMAP_TYPE value);

/** 通过键取得值 */
__foxext__ VALUE_HASHMAP_TYPE get_hash_map(Hash_map map,KEY_HASHMAP_TYPE key);

/** 移除键值 */
__foxext__ bool remove_hash_map(Hash_map map,KEY_HASHMAP_TYPE key);

/** 清空 */
__foxext__  void makeEmpty_hash_map(Hash_map map);

/** 是否存在键值 */
__foxext__ bool exists_hash_map(Hash_map map,KEY_HASHMAP_TYPE key);

#endif /* FOXLIBC_COLLECT_MAP_H */
